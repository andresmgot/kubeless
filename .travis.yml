language: go

os:
  - linux

go:
  - 1.8.3

go_import_path: github.com/kubeless/kubeless

services:
  - docker
env:
  global:
    - CONTROLLER_IMAGE_NAME=bitnami/kubeless-controller
    - CONTROLLER_IMAGE=${CONTROLLER_IMAGE_NAME}:${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID}
    - CGO_ENABLED=0

before_install:
  - set -e

install:
  - go get github.com/mitchellh/gox github.com/golang/lint/golint
  - >-
    wget -O $GOPATH/bin/kubecfg
    https://github.com/ksonnet/kubecfg/releases/download/v0.4.0/kubecfg-$(go env GOOS)-$(go env GOARCH)
  - chmod +x $GOPATH/bin/kubecfg
  - git clone --depth=1 https://github.com/ksonnet/ksonnet-lib.git
  - export KUBECFG_JPATH=$PWD/ksonnet-lib
  - git clone --depth=1 https://github.com/sstephenson/bats.git bats
  - export PATH=$PATH:$PWD/bats/bin

script:
  - make test
  - make validation
  - make VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID} binary
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      make controller-image CONTROLLER_IMAGE=$CONTROLLER_IMAGE
    fi
  - make all-yaml
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      export TEST_DEBUG=1
      docker tag $CONTROLLER_IMAGE ${CONTROLLER_IMAGE_NAME}:latest
      make integration-tests
    fi

after_success:
  - |
    if [[ "$TRAVIS_BRANCH" == master && \
          "$TRAVIS_PULL_REQUEST" == false ]]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      docker tag $CONTROLLER_IMAGE ${CONTROLLER_IMAGE_NAME}:latest
      docker push ${CONTROLLER_IMAGE_NAME}:latest
    fi

before_deploy:
  - make VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID} binary-cross
  - for d in bundles/kubeless_*; do zip -r9 $d.zip $d/; done
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      docker push $CONTROLLER_IMAGE
      NEW_DIGEST=$(./script/find_digest.sh ${CONTROLLER_IMAGE_NAME} ${TRAVIS_TAG} | cut -d " " -f 2)
      OLD_DIGEST=":latest"
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless.yaml > kubeless-${TRAVIS_TAG}.yaml
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless-rbac.yaml > kubeless-rbac-${TRAVIS_TAG}.yaml
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless-openshift.yaml > kubeless-openshift-${TRAVIS_TAG}.yaml
    fi
  - export RELEASE_NOTES=$(./script/release_notes.sh ${TRAVIS_TAG})

deploy:
  provider: releases
  api_key:
    secure: "nVgmSH4ClqCfwG81zCpegnP35V/O7ymDNpkiCthN/Bm+QKyqIME3FCceJ5dtuaQJEiAVkvSM7EI0nYw7pw7+AqcRsBbUcUwI1ZFIihEbmsH5wIDXBYEELRfy8FBy1rFw1HWySnbSCBEiWj8OnPupI2+xYHkNmdN6Z6TkHViY9T15+LfcUJ/mwICeSTy6/orjT9TenGPhJKbNrCvMBwUzfSoxLXZQkvJBhC5HB1As0Lh9vLfI6PxCch2mThlwxRa8r2jQAf5KP4P/fsFnQJsTpVi+l2SBoYvufvI8IvvfF9loO/mv8kuxkpAMwA7quoaafzHbu+In3nCSQeAOBqNkaQMM4fYYxIdZUA7hC7ex4VSXEd3IqlDEFREOW8qqrb/io/ai80nGvPlpv1C+IMQu3OssKM0aDf2WM3GRftPN+wJnhRvVxTKr26GI8zGIz0tG2JKv5zLi6c4PR/sgLZ46K6lx+GYcb8Q94KAhqulkhBRDw6jYzTrg8EpDdiUACr1yJH/qSWqO0W7a8Sbp9xOIec8c4aezacSLC2bhn4yYutLlXjuv8uU61ilfmRtq3YVycTrttaTXHqRZGiujBW24Ks21yuk1nhAm9BhuT8ryjc9uQH/LbVLtX/KMsjb1IZuw9O0yGTobheR731rbz8wuWEpJTYsUkZSFmseARP7Sa/s="
  file_glob: true
  file:
    - kubeless-${TRAVIS_TAG}.yaml
    - kubeless-rbac-${TRAVIS_TAG}.yaml
    - kubeless-openshift-${TRAVIS_TAG}.yaml
    - bundles/kubeless_*.zip
  skip_cleanup: true
  name: ${TRAVIS_TAG}
  overwrite: true
  body: ${RELEASE_NOTES}
  draft: true
  on:
    tags: true
    repo: kubeless/kubeless
    condition: $CGO_ENABLED = 0
